---
- name: "Get info from service {{ service }}"
  docker_swarm_service_info:
    name: "{{ service }}"
  register: docker_swarm_service_info_result
  # until: docker_swarm_service_info_result.service.UpdateStatus.State == 'completed'
  retries: 3
  delay: 2

- name: "Store Vars before update {{ service }} service"
  set_fact:
    repo: "{{ docker_swarm_service_info_result.service.Spec.TaskTemplate.ContainerSpec.Image.split(':')[0] }}"
    dockerimage: "{{ docker_swarm_service_info_result.service.Spec.TaskTemplate.ContainerSpec.Image.split(':')[0] + ':' + imgtag if imgtag is defined else docker_swarm_service_info_result.service.Spec.TaskTemplate.ContainerSpec.Image }}"

- name: "Docker Pull {{ dockerimage }} for service {{ service }}"
  docker_image:
    name: "{{ dockerimage }}"
    source: pull

- name: "Update service {{ service }} with image {{ dockerimage }}"
  command: "docker service update --with-registry-auth --image={{ dockerimage }} {{ service }}"
  when:
    - only_pull is not defined

- name: "Get info from service {{ service }}"
  docker_swarm_service_info:
    name: "{{ service }}"
  register: docker_swarm_service_upgrade_info_result
  until: docker_swarm_service_upgrade_info_result.service.UpdateStatus.State == 'completed'
  retries: 100
  delay: 5
  when:
    - only_pull is not defined